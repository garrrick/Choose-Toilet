rm(list = ls())


##################
### Start time ###
##################
t0 <- Sys.time()



########################
### Simulation times ###
########################
sim.times <- 10000



#########################
### Number of toilets ###
#########################
nt <- 300



#############################################################################
### Cleanness rank of toilet, larger number corresponds to cleaner toilet ###
#############################################################################
tp <- replicate(sim.times, sample(nt))



#####################################################
### Probability of choosing the most clean toilet ###
#####################################################
gbt <- matrix(0, nr = sim.times, nc = nt-1)
for (ii in 1:(nt-1)) {
  
  
  ##################################################################################
  ## Record the cleanness of first ii toilets I have checked (1st to iird toilet) ##
  ##################################################################################
  check <- tp[1:ii,,drop = FALSE]
  
  
  ##########################################################################################################################
  ## For a future toilet I have not yet checked, compare the future toilet cleanness with first ii toilets I have checked ##
  ##########################################################################################################################
  g <- c()
  for (kk in (ii+1):nt) {
    tpk <- matrix(tp[kk,], nc = ncol(check), nr = nrow(check), byrow = TRUE)
    
        
    ############################################################################################################
    ## If kkrd future toilet is the most clean toilet over first ii toilets I have checked, then mark as TRUE ##
    ############################################################################################################
    g <- rbind(g, colSums(tpk > check) == nrow(check))
  }
  
  
  ###############################################################################################
  ## Identify the cleanness rank of the most clean toilet over first ii toilets I have checked ##
  ###############################################################################################
  temp <- g*tp[(ii+1):nt,,drop = FALSE]
  
  
  ######################################################################################################
  ## Identify position of the most recent toilet that is cleaner then first ii toilets I have checked ##
  ######################################################################################################
  gbt[,ii] <- apply(temp, 2, function(x){y <- x[min(which(x != 0))]; y[is.na(y)] <- 0; return(y)})
}



####################################################################################################################################################################
### For each toilet, obtain probability that the most recent toilet is the best toilet (largest rank of toilet) over all toilets, whether checked or not checked ###
####################################################################################################################################################################
ps <- colMeans(gbt == nt)



###########################################################################
### Obtain the highest probability that the best toilet has been chosen ###
###########################################################################
highest.ps <- ps[ps == max(ps)]
highest.ps



###################################
### The position of best toilet ###
###################################
locat <- (1:nt)[ps == max(ps)]
locat



#####################################
### The percentile of best toilet ###
#####################################
p.locat <- 100*(1:nt)[ps == max(ps)]/nt
p.locat



################
### End time ###
################
t1 <- Sys.time()



#######################
### Processing time ###
#######################
process_time <- difftime(t1, t0, units = "mins")



########################################################################################################################
### Blue point indicates toilet percentile that is with the highest probability that the best toilet has been chosen ###
########################################################################################################################
plot(((1:(nt-1))/nt)*100, ps, type = 'l', lwd = 2,
     xlab = 'Toilet percentile (%)', 
     ylab = 'Probability of choosing the best toilet')
points(p.locat, highest.ps, col = 'blue', lwd = 5)



###########################################
### Draw the likelihood function figure ###
###########################################
xx <- (1:nt)/nt
yy <- c()
for (ii in 1:length(xx)){
  yy[ii] <- -xx[ii]*log(xx[ii])
}
lines(xx*100, yy, lty = 2, lwd = 2)



###################################################################################################################################
### Red point indicates toilet theoretical percentile that is with the highest probability that the best toilet has been chosen ###
###################################################################################################################################
points(1/exp(1)*100, -(1/exp(1))*log(1/exp(1)), col = 'red', lwd = 5)



###############
### Legends ###
###############
nu_legend <- paste0('The simulated percentile of best toilet ', round(p.locat, 1), ' %')
th_legend <- paste0('The theoretical percentile of best toilet ', round(1/exp(1)*100, 1), ' %')
legend('topright', 
       legend = c(nu_legend, th_legend),
       col = c('blue', 'red'),
       pch = c(1, 1),
       pt.lwd = c(5, 5))
pt_legend <- paste0('Process time ', round(process_time, 1), ' mins')
legend('bottomleft', 
       legend = c('Likelihood function, derived numerically', 'Likelihood function, derived theoretically', pt_legend),
       lty = c(1, 2, NA),
       lwd = 2)
